# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    machine:
      image: ubuntu-1604:201903-01
    working_directory: ~/var/www

    branches:
      only:
        - master
        - testing

    steps:
      - run: whoami
      - run: pwd

      #See https://discuss.circleci.com/t/could-not-get-lock-var-lib-apt-lists-lock/28337
      - run: sudo killall -9 apt-get || true
      - run: sudo killall -9 apt || true
      - run: sudo dpkg -l | grep desktop
      - run: sudo apt-add-repository -y ppa:ondrej/php
      - run: sudo apt-get -y remove google-chrome-beta/stable google-chrome-stable/stable google-chrome-unstable/stable
      - run: sudo apt-get -y update
      - run: sudo apt-cache  search php
      - run: sudo apt-cache  search mysql
      #- run: sudo apt-get -y upgrade
      - run: sudo debconf-set-selections <<< "mysql-server-5.5 mysql-server/root_password password 'wibble'"
      - run: sudo debconf-set-selections <<< "mysql-server-5.5 mysql-server/root_password_again password 'wibble'"
      - run: sudo debconf-set-selections <<< "mysql-server mysql-server/root_password password 'wibble'"
      - run: sudo debconf-set-selections <<< "mysql-server mysql-server/root_password_again password 'wibble'"
      - run: export DEBIAN_FRONTEND=noninteractive
      - run: sudo apt-get -y install wget php7.4 php7.4-gd php7.4-intl php7.4-mbstring php7.4-mysql php7.4-tidy php7.4-zip php7.4-curl php7.4-phpdbg php7.4-xml mysql-server mysql-client
      - run: wget https://github.com/manticoresoftware/manticoresearch/releases/download/3.3.0/manticore_3.3.0-200204-01fc8ad-release.xenial_amd64-bin.deb && sudo dpkg -i ./manticore_3.3.0-200204-01fc8ad-release.xenial_amd64-bin.deb
      - run: sudo apt autoremove
      - run: php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
      - run: php -r "if (hash_file('sha384', 'composer-setup.php') === 'e0012edf3e80b6978849f5eff0d4b4e4c79ff1609dd1e613307e16318854d24ae64f26d17af3ef0bf7cfb710ca74755a') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
      - run: php composer-setup.php
      - run: php -r "unlink('composer-setup.php');"
      - run: sudo mv composer.phar /usr/bin/composer

      - run: echo $PATH && ls -lh /var/www
      - run: cd /tmp && git clone https://github.com/gordonbanderson/sphinxsearch.git -b testing && find . && echo 'DIRRRRR' && pwd && ls -la sphinxsearch && sudo mv -v sphinxsearch/* /home/circleci/var/www
      - run: pwd

      # Setup .env file
      - run: echo 'SS_BASE_URL="http://localhost"' > .env
      - run: echo 'SS_DATABASE_CLASS="MySQLPDODatabase"' >> .env
      - run: echo 'SS_DATABASE_NAME="unittesting"' >> .env
      - run: echo 'SS_DATABASE_PASSWORD="wibble"' >> .env
      - run: echo 'SS_DATABASE_SERVER="localhost"' >> .env
      - run: echo 'SS_DATABASE_USERNAME="root"' >> .env
      - run: echo 'SS_ENVIRONMENT_TYPE="test"' >> .env
      - run: cat .env



      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-ci-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-ci-dependencies-

      - run: ls -lh && ls -lh /var/www
      - run: composer validate
      - run: composer self-update
      - run: composer require --prefer-source --no-update silverstripe/recipe-cms:4.x-dev
      - run: composer install --prefer-source --no-interaction --no-progress --no-suggest --optimize-autoloader --verbose --profile


      - save_cache:
          paths:
            - ./vendor
          key: v1-dependencies-{{ checksum "composer.json" }}

      # run test,upload coverage
      #- run: vendor/bin/phpstan analyze code
      - run: phpdbg -qrr vendor/bin/phpunit -d memory_limit=4G --coverage-clover=coverage.xml tests/
      - run: bash <(curl -s https://codecov.io/bash) -f coverage.xml

